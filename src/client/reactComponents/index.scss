@import "@fontsource/press-start-2p";
$border-outset: 4px; // used for spacing and polygon shape
$border-width: 6px; // thickness of the border
$border-image: linear-gradient(45deg, #000, #333); // fake border style for demonstration

$button-font: 'Press Start 2P', monospace; // or any pixel-style font you like

$button-shadow: #2d2d2d; // dark shadow under the button
$button-shine: #ffffff; // white shine on top
$button-hover-shadow: #1a1a1a; // darker shadow on hover
$button-hover-shine: #e0e0e0; // lighter shine on hover



$button-green: #4bb244;
$button-red: #f22561;
$button-yellow: #f2c019;
$button-blue: #4eb6d9;







html, body {
  height: 100%;
  margin: 0;
}

body {
  background-image: url('/public/Animated-Gif.gif'); /* or a path to your public image */
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  background-attachment: fixed; /* this keeps it from scrolling */
  font-family: 'MyCustomFont', sans-serif;
}

@font-face {
  font-family: 'MyCustomFont';
  src: url('../assets/fonts/joystix-monospace.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
}

.component-header {
    background-image: linear-gradient(white, lime);
    //color: transparent;
    background-clip: text;
}

.card{
  background-color: #d3d3d3; /* light gray */
  border: 4px solid #000;
  box-shadow: none;
  border-radius: 0;
  padding: 20px;
  font-family: $button-font, monospace;
  text-align: center;
}

p, h1, h2, h3, label {
  color: white;
  font-family: $button-font;
  text-shadow: 2px 2px 4px black;
}

input, button {
  font-family: $button-font;
}

input:focus, textarea:focus {
  background-color: #e0e0e0;
  border-color: #4bb244;
}

html, body {
  height: 100%;
  overflow: hidden;
}

.center-form-vertically {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0;
}

.submission-box {
  background-color: #2c2c2c; /* CRT terminal dark */
  border: 4px solid #000; /* thick pixel frame */
  padding: 20px;
  max-width: 800px;
  margin: auto;
  box-shadow: 0 0 0 4px #f2c019, 0 0 12px #f2c019; /* glowing yellow border */
  font-family: 'Press Start 2P', monospace;
  color: #ffffff;
  text-align: left;
}


.form-row {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
}

label {
  margin-right: 10px;
  color: #0f0;
  font-family: 'Press Start 2P', monospace;
}

input {
  flex: 1;
  background: transparent;
  border: none;
  border-bottom: 2px solid #0f0;
  color: #0f0;
  font-family: 'Press Start 2P', monospace;
  padding: 4px;
  outline: none;
  text-shadow: 2px 2px 4px black;
}

input:focus, textarea:focus {
  border-bottom: 2px solid #f2c019; /* yellow highlight on focus */
}


$colors: ("green", $button-green), ("red", $button-red),
  ("yellow", $button-yellow), ("blue", $button-blue);

$polygon-points: (
  0 calc(#{$border-outset} * 2),
  calc(100% - (#{$border-outset} * 2)) calc(#{$border-outset} * 2),
  calc(100% - (#{$border-outset} * 2)) #{$border-outset},
  calc(100% - #{$border-outset}) #{$border-outset},
  calc(100% - #{$border-outset}) 0,
  100% 0,
  100% calc(#{$border-outset} * 2),
  calc(100% - #{$border-outset}) calc(#{$border-outset} * 2),
  calc(100% - #{$border-outset}) 100%,
  0 100%
);

@function generate-clip-path($points) {
  $value: 'polygon(';

  @each $point in $points {
    $value: $value + $point + ', ';
  }

  $value: unquote(str-slice($value, 1, str-length($value) - 1));
  @return $value + ')';
}

.bit16-button {
  position: relative;
  border-image: $border-image;
  background-color: $button-green;
  border-image-repeat: initial;
  padding: 4px 18px;
  border-image-slice: 12;
  border-width: $border-width;
  font-size: 24px;
  border-image-outset: $border-outset;
  cursor: pointer;
  font-family: $button-font;
  line-height: 0.6;

  @each $name, $color in $colors {
    &.has-#{$name}-background {
      background-color: $color;
    }
  }

  &::before,
  &::after {
    content: '';
    position: absolute;
    display: block;
    z-index: 0;

    width: calc(100% + (#{$border-outset} * 3));
    height: calc(#{$border-outset} * 3);
  }

  &::before {
    //background-color: $button-shadow;
    left: calc(0% - #{$border-outset});
    top: calc(100% - (#{$border-outset}));
    clip-path: generate-clip-path($polygon-points);
  }

  &::after {
    //background-color: $button-shine;
    right: calc(0% - #{$border-outset});
    bottom: calc(100% - (#{$border-outset}));
    transform: rotate(0.5turn);
    clip-path: generate-clip-path($polygon-points);
  }

  &:hover {
    &::before {
      //background-color: $button-hover-shadow;
    }
    &::after {
      //background-color: $button-hover-shine;
    }
  }

  &:active {
    &::before {
      background-color: $button-shine;
    }
    &::after {
      background-color: $button-shadow;
    }
  }
}